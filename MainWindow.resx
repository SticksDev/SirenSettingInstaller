<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //8xMsz/Qi8N/0AwFv9ALgL/NDZp/yNJ//8kSv7/MUW3/zE4aP8wNmf/MEK2/yNK/v8jTv//Nzhu/0Mp
        Av9DLRT/OyUO/8esO//y0Tv/+t9k/8C+7v8WC83/JBnY/yMY2v8jF9n/JxrZ/yQZ2f8nHNv/FAnY/2df
        3f+6u/n/EiP0/yVA//84Omb/RDYA/0A3G/9BNAX/Nj5k/yVQ6/8fV///HlL+/x5S/v8fV///JlLq/zk/
        Z/9DMgX/RjgV/zUnDv97aSb/9dxP/+XHN///9rL/cGzo/xMH0v8nHNz/JBnb/yUY2v8nG9n/JRrb/yUa
        3P8lG93/HBHX/8vH8P9Wbfn/ETv8/ydS7P9AQDP/RzsI/0M+Hf9FOgf/QT8l/zVEY/9AcNP/QG/P/zdD
        Y/9DPiX/RToH/0c/Gf86MhH/VU0c/9/NUf/p0kf/8d9n/9nX8P8jGdT/Ixjc/yQb3P8lGtz/Jxrb/ygc
        2v8nG9v/JRvd/yce3f8XDdz/WlHf/9Xe+v8YTff/G1r//yhh3v9BSDb/Sz8E/0dDGf9JRRv/PjMA/5i5
        tf+Vsqr/QDMA/0tGGP9IQhv/OzYQ/1lVIP/Qx1X/7NxZ/+HPS////tX/Y13l/xYL1/8oHt7/JRvd/yYb
        3f8oGtz/Kh3c/ykc3P8nHN3/JBve/ykf4P8RCNz/l4/o/77W/f8JV/f/GW3//yV37v83X27/SEgU/01D
        Cv9COwL/g4dp/36CZP88OAX/Qj8Q/0dGFv9/fzj/2NVm/+jeYf/bzk7///+//52Y8v8WC9b/KB/h/yYb
        3/8mHN7/KR3e/ykc3P8qHt7/KR7e/yke3v8mHOD/Jhzg/ykf4f8WDd7/rKPr/7/f/f8Wdfn/CXb7/xyO
        //8piNb/OHOH/0RjVv9CUjX/R1Q1/15qSv+CjFj/usJv/+Pmef/a2GP/29dh////xf+uq/b/HRLX/yce
        4f8nHeH/Jhzg/yge4P8pHd3/KR3d/yke3v8qH97/Kh/f/yke4P8nHeH/KR/i/ykf4/8XDt//mI3p/93v
        +/9arf3/C4T6/wuM//8cnf//L6b//0Or/v9isfX/j8DZ/7rTrv/L14L/0dVu/+3ukv///+P/lpHy/x0R
        2P8nHeL/KR/i/ycd4f8oHuH/Kh/g/yof3/8qH9//KyDg/ysg3/8rIOD/KyDh/ykf4v8oHuL/KR/k/ysh
        5f8WDOH/XE/k/9DK8v/G5/z/e8n9/0iv+/82qPv/Paj8/1qu9P+Iu9r/vtS5/+vytf/7/dr/zsv4/1pS
        6P8ZDtz/KiDk/yog4/8oHuL/KB/i/yog4v8rIOD/KyDg/ysg4P8rIOD/KyDg/ywh4f8rIuH/KiLi/yog
        4/8pH+T/KR/k/y0k5f8dFOT/HhXh/2VX5f+vo+3/zc/1/9Df+P/O5Pr/1Ob5/9vj9f/S0fT/pqH1/15W
        6/8iGN//HhTh/y0k5v8qIOX/KSDk/yog5P8qIeP/KyHh/ysi4f8qIeH/KyDg/ysh4f8sIeH/KyHi/ysj
        4v8rI+L/KyLk/yoh5f8pIOX/KSDl/ywj5v8rI+f/HRXl/xcP4/8nHOP/PTHk/0g85f9IPOX/OjHl/yYe
        4/8aEeD/Hxbi/ysj5v8tJOb/KiDm/yoh5v8qIuX/KyLk/ysj4/8rI+L/KyPi/yoi4f8qIeL/KiHj/ysi
        4v8rI+L/KyPi/ysj4v8sI+T/KyPl/ysj5v8rIub/KiHm/yoh5v8tJOb/Lybo/ysj5/8nH+f/JBzm/yQd
        5v8nH+b/KyTm/y8m5/8uJOf/KyLn/yoi5v8rIub/KyPm/ysj5f8sJOT/LCTj/ywj4/8rI+P/KyPj/yoh
        5P8rIuT/KyLj/ysj5P8sI+X/LCTk/ywk5f8sJOb/LCTm/ywk5/8sI+f/KiPn/ysj6P8qIuf/KyPo/ywk
        6P8sJef/LCXo/y0k5/8qI+f/KiLn/ysj6P8qI+j/KyPn/ywk5/8sJOb/LCTm/ywk5v8sJOX/LCPl/ysj
        5f8rI+X/KiLl/ysj5f8rI+X/KyPl/ywk5v8sJOb/LCTm/ywk5v8sJOb/LSXo/y0l6P8rJOf/KiPp/ysk
        6f8rJOn/KiPo/yok6P8rJOj/KiPo/yoj6P8qI+j/KiTp/yok6P8sJej/LSXo/y0l6P8tJef/LCTm/ywk
        5v8sJOb/KyPl/ysj5f8rI+b/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>